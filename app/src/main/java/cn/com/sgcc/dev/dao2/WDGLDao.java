package cn.com.sgcc.dev.dao2;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.com.sgcc.dev.model2.WDGL;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "WDGL".
*/
public class WDGLDao extends AbstractDao<WDGL, Long> {

    public static final String TABLENAME = "WDGL";

    /**
     * Properties of entity WDGL.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "ID");
        public final static Property Type = new Property(1, String.class, "type", false, "TYPE");
        public final static Property KeyWord = new Property(2, String.class, "keyWord", false, "KEYWORD");
        public final static Property Mslx = new Property(3, String.class, "mslx", false, "MSLX");
        public final static Property Name = new Property(4, String.class, "name", false, "NAME");
        public final static Property Cslx = new Property(5, String.class, "cslx", false, "CSLX");
        public final static Property CsId = new Property(6, long.class, "csId", false, "CSID");
        public final static Property Czr = new Property(7, String.class, "czr", false, "CZR");
        public final static Property WdId = new Property(8, String.class, "wdId", false, "WDID");
        public final static Property Sbsj = new Property(9, String.class, "sbsj", false, "SBSJ");
        public final static Property Ssdw = new Property(10, String.class, "ssdw", false, "SSDW");
        public final static Property Cstable = new Property(11, String.class, "cstable", false, "CSTABLE");
        public final static Property RealName = new Property(12, String.class, "realName", false, "REALNAME");
        public final static Property Sb = new Property(13, String.class, "sb", false, "SB");
        public final static Property Sb_ls_id = new Property(14, String.class, "sb_ls_id", false, "SB_LS_ID");
        public final static Property Sfbdsj = new Property(15, String.class, "sfbdsj", false, "SFBDSJ");
        public final static Property Sbdw = new Property(16, String.class, "sbdw", false, "SBDW");
        public final static Property Sh = new Property(17, String.class, "sh", false, "SH");
        public final static Property Hzsj = new Property(18, String.class, "hzsj", false, "HZSJ");
        public final static Property Sbczlx = new Property(19, String.class, "sbczlx", false, "SBCZLX");
        public final static Property Wj_dw = new Property(20, String.class, "wj_dw", false, "WJ_DW");
        public final static Property Wj_ls_id = new Property(21, String.class, "wj_ls_id", false, "WJ_LS_ID");
        public final static Property Sfxtlr = new Property(22, String.class, "sfxtlr", false, "SFXTLR");
        public final static Property Ed_tag = new Property(23, String.class, "ed_tag", false, "ED_TAG");
    }


    public WDGLDao(DaoConfig config) {
        super(config);
    }
    
    public WDGLDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, WDGL entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(2, type);
        }
 
        String keyWord = entity.getKeyWord();
        if (keyWord != null) {
            stmt.bindString(3, keyWord);
        }
 
        String mslx = entity.getMslx();
        if (mslx != null) {
            stmt.bindString(4, mslx);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(5, name);
        }
 
        String cslx = entity.getCslx();
        if (cslx != null) {
            stmt.bindString(6, cslx);
        }
        stmt.bindLong(7, entity.getCsId());
 
        String czr = entity.getCzr();
        if (czr != null) {
            stmt.bindString(8, czr);
        }
 
        String wdId = entity.getWdId();
        if (wdId != null) {
            stmt.bindString(9, wdId);
        }
 
        String sbsj = entity.getSbsj();
        if (sbsj != null) {
            stmt.bindString(10, sbsj);
        }
 
        String ssdw = entity.getSsdw();
        if (ssdw != null) {
            stmt.bindString(11, ssdw);
        }
 
        String cstable = entity.getCstable();
        if (cstable != null) {
            stmt.bindString(12, cstable);
        }
 
        String realName = entity.getRealName();
        if (realName != null) {
            stmt.bindString(13, realName);
        }
 
        String sb = entity.getSb();
        if (sb != null) {
            stmt.bindString(14, sb);
        }
 
        String sb_ls_id = entity.getSb_ls_id();
        if (sb_ls_id != null) {
            stmt.bindString(15, sb_ls_id);
        }
 
        String sfbdsj = entity.getSfbdsj();
        if (sfbdsj != null) {
            stmt.bindString(16, sfbdsj);
        }
 
        String sbdw = entity.getSbdw();
        if (sbdw != null) {
            stmt.bindString(17, sbdw);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(18, sh);
        }
 
        String hzsj = entity.getHzsj();
        if (hzsj != null) {
            stmt.bindString(19, hzsj);
        }
 
        String sbczlx = entity.getSbczlx();
        if (sbczlx != null) {
            stmt.bindString(20, sbczlx);
        }
 
        String wj_dw = entity.getWj_dw();
        if (wj_dw != null) {
            stmt.bindString(21, wj_dw);
        }
 
        String wj_ls_id = entity.getWj_ls_id();
        if (wj_ls_id != null) {
            stmt.bindString(22, wj_ls_id);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(23, sfxtlr);
        }
 
        String ed_tag = entity.getEd_tag();
        if (ed_tag != null) {
            stmt.bindString(24, ed_tag);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, WDGL entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String type = entity.getType();
        if (type != null) {
            stmt.bindString(2, type);
        }
 
        String keyWord = entity.getKeyWord();
        if (keyWord != null) {
            stmt.bindString(3, keyWord);
        }
 
        String mslx = entity.getMslx();
        if (mslx != null) {
            stmt.bindString(4, mslx);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(5, name);
        }
 
        String cslx = entity.getCslx();
        if (cslx != null) {
            stmt.bindString(6, cslx);
        }
        stmt.bindLong(7, entity.getCsId());
 
        String czr = entity.getCzr();
        if (czr != null) {
            stmt.bindString(8, czr);
        }
 
        String wdId = entity.getWdId();
        if (wdId != null) {
            stmt.bindString(9, wdId);
        }
 
        String sbsj = entity.getSbsj();
        if (sbsj != null) {
            stmt.bindString(10, sbsj);
        }
 
        String ssdw = entity.getSsdw();
        if (ssdw != null) {
            stmt.bindString(11, ssdw);
        }
 
        String cstable = entity.getCstable();
        if (cstable != null) {
            stmt.bindString(12, cstable);
        }
 
        String realName = entity.getRealName();
        if (realName != null) {
            stmt.bindString(13, realName);
        }
 
        String sb = entity.getSb();
        if (sb != null) {
            stmt.bindString(14, sb);
        }
 
        String sb_ls_id = entity.getSb_ls_id();
        if (sb_ls_id != null) {
            stmt.bindString(15, sb_ls_id);
        }
 
        String sfbdsj = entity.getSfbdsj();
        if (sfbdsj != null) {
            stmt.bindString(16, sfbdsj);
        }
 
        String sbdw = entity.getSbdw();
        if (sbdw != null) {
            stmt.bindString(17, sbdw);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(18, sh);
        }
 
        String hzsj = entity.getHzsj();
        if (hzsj != null) {
            stmt.bindString(19, hzsj);
        }
 
        String sbczlx = entity.getSbczlx();
        if (sbczlx != null) {
            stmt.bindString(20, sbczlx);
        }
 
        String wj_dw = entity.getWj_dw();
        if (wj_dw != null) {
            stmt.bindString(21, wj_dw);
        }
 
        String wj_ls_id = entity.getWj_ls_id();
        if (wj_ls_id != null) {
            stmt.bindString(22, wj_ls_id);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(23, sfxtlr);
        }
 
        String ed_tag = entity.getEd_tag();
        if (ed_tag != null) {
            stmt.bindString(24, ed_tag);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public WDGL readEntity(Cursor cursor, int offset) {
        WDGL entity = new WDGL( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // type
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // keyWord
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // mslx
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // name
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // cslx
            cursor.getLong(offset + 6), // csId
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // czr
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // wdId
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // sbsj
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // ssdw
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // cstable
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // realName
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // sb
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // sb_ls_id
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // sfbdsj
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // sbdw
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // sh
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // hzsj
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // sbczlx
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // wj_dw
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // wj_ls_id
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // sfxtlr
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23) // ed_tag
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, WDGL entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setType(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setKeyWord(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMslx(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setName(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCslx(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setCsId(cursor.getLong(offset + 6));
        entity.setCzr(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setWdId(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setSbsj(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSsdw(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCstable(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setRealName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSb(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSb_ls_id(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setSfbdsj(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setSbdw(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setSh(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setHzsj(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setSbczlx(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setWj_dw(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setWj_ls_id(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setSfxtlr(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setEd_tag(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(WDGL entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(WDGL entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(WDGL entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
