package cn.com.sgcc.dev.dao2;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.com.sgcc.dev.model2.ycsb.XLCS;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "XLCS".
*/
public class XLCSDao extends AbstractDao<XLCS, Integer> {

    public static final String TABLENAME = "XLCS";

    /**
     * Properties of entity XLCS.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Xlbh = new Property(0, Long.class, "xlbh", false, "XLBH");
        public final static Property Id = new Property(1, int.class, "id", true, "ID");
        public final static Property BH = new Property(2, String.class, "BH", false, "BH");
        public final static Property Vf = new Property(3, int.class, "vf", false, "VF");
        public final static Property XLMC = new Property(4, String.class, "XLMC", false, "XLMC");
        public final static Property XLCD = new Property(5, double.class, "XLCD", false, "XLCD");
        public final static Property DYDJ = new Property(6, int.class, "DYDJ", false, "DYDJ");
        public final static Property KGBH1 = new Property(7, String.class, "KGBH1", false, "KGBH1");
        public final static Property KGBH2 = new Property(8, String.class, "KGBH2", false, "KGBH2");
        public final static Property KGBH3 = new Property(9, String.class, "KGBH3", false, "KGBH3");
        public final static Property CZ1 = new Property(10, String.class, "CZ1", false, "CZ1");
        public final static Property CZ2 = new Property(11, String.class, "CZ2", false, "XLBH");
        public final static Property CZ3 = new Property(12, String.class, "CZ3", false, "CZ3");
        public final static Property JGLX1 = new Property(13, String.class, "JGLX1", false, "JGLX1");
        public final static Property JGLX2 = new Property(14, String.class, "JGLX2", false, "JGLX2");
        public final static Property JGLX3 = new Property(15, String.class, "JGLX3", false, "JGLX3");
        public final static Property JGMC1 = new Property(16, String.class, "JGMC1", false, "JGMC1");
        public final static Property JGMC2 = new Property(17, String.class, "JGMC2", false, "JGMC2");
        public final static Property JGMC3 = new Property(18, String.class, "JGMC3", false, "JGMC3");
        public final static Property SFTCYX = new Property(19, String.class, "SFTCYX", false, "SFTCYX");
        public final static Property BZ = new Property(20, String.class, "BZ", false, "BZ");
        public final static Property Sh = new Property(21, String.class, "sh", false, "SH");
        public final static Property Shr2 = new Property(22, String.class, "shr2", false, "SHR");
        public final static Property Shyy = new Property(23, String.class, "shyy", false, "SHYY");
        public final static Property GLDW = new Property(24, String.class, "GLDW", false, "GLDW");
        public final static Property GLDW2 = new Property(25, String.class, "GLDW2", false, "GLDW2");
        public final static Property GLDW3 = new Property(26, String.class, "GLDW3", false, "GLDW3");
        public final static Property KDQLLX = new Property(27, String.class, "KDQLLX", false, "KDQLLX");
        public final static Property DTXL = new Property(28, String.class, "DTXL", false, "DTXL");
        public final static Property ZDX = new Property(29, String.class, "ZDX", false, "ZDX");
        public final static Property WDID = new Property(30, int.class, "WDID", false, "WDID");
        public final static Property DDDW = new Property(31, String.class, "DDDW", false, "DDDW");
        public final static Property Czr = new Property(32, String.class, "czr", false, "CZR");
        public final static Property Tjr = new Property(33, String.class, "tjr", false, "TJR");
        public final static Property Dwtjr = new Property(34, String.class, "dwtjr", false, "DWTJR");
        public final static Property CZSJ = new Property(35, java.util.Date.class, "CZSJ", false, "CZSJ");
        public final static Property SFBDSJ = new Property(36, String.class, "SFBDSJ", false, "SFBDSJ");
        public final static Property SB = new Property(37, String.class, "SB", false, "SB");
        public final static Property SBSJ = new Property(38, java.util.Date.class, "SBSJ", false, "SBSJ");
        public final static Property SB_LS_ID = new Property(39, String.class, "SB_LS_ID", false, "SB_LS_ID");
        public final static Property SBDW = new Property(40, String.class, "SBDW", false, "SBDW");
        public final static Property HZSJ = new Property(41, java.util.Date.class, "HZSJ", false, "HZSJ");
        public final static Property SBCZLX = new Property(42, String.class, "SBCZLX", false, "SBCZLX");
        public final static Property SFXTLR = new Property(43, String.class, "SFXTLR", false, "SFXTLR");
        public final static Property WJ_DW = new Property(44, String.class, "WJ_DW", false, "WJ_DW");
        public final static Property WJ_LS_ID = new Property(45, String.class, "WJ_LS_ID", false, "WJ_LS_ID");
    }


    public XLCSDao(DaoConfig config) {
        super(config);
    }
    
    public XLCSDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, XLCS entity) {
        stmt.clearBindings();
 
        Long xlbh = entity.getXlbh();
        if (xlbh != null) {
            stmt.bindLong(1, xlbh);
        }
        stmt.bindLong(2, entity.getId());
 
        String BH = entity.getBH();
        if (BH != null) {
            stmt.bindString(3, BH);
        }
        stmt.bindLong(4, entity.getVf());
 
        String XLMC = entity.getXLMC();
        if (XLMC != null) {
            stmt.bindString(5, XLMC);
        }
        stmt.bindDouble(6, entity.getXLCD());
        stmt.bindLong(7, entity.getDYDJ());
 
        String KGBH1 = entity.getKGBH1();
        if (KGBH1 != null) {
            stmt.bindString(8, KGBH1);
        }
 
        String KGBH2 = entity.getKGBH2();
        if (KGBH2 != null) {
            stmt.bindString(9, KGBH2);
        }
 
        String KGBH3 = entity.getKGBH3();
        if (KGBH3 != null) {
            stmt.bindString(10, KGBH3);
        }
 
        String CZ1 = entity.getCZ1();
        if (CZ1 != null) {
            stmt.bindString(11, CZ1);
        }
 
        String CZ2 = entity.getCZ2();
        if (CZ2 != null) {
            stmt.bindString(12, CZ2);
        }
 
        String CZ3 = entity.getCZ3();
        if (CZ3 != null) {
            stmt.bindString(13, CZ3);
        }
 
        String JGLX1 = entity.getJGLX1();
        if (JGLX1 != null) {
            stmt.bindString(14, JGLX1);
        }
 
        String JGLX2 = entity.getJGLX2();
        if (JGLX2 != null) {
            stmt.bindString(15, JGLX2);
        }
 
        String JGLX3 = entity.getJGLX3();
        if (JGLX3 != null) {
            stmt.bindString(16, JGLX3);
        }
 
        String JGMC1 = entity.getJGMC1();
        if (JGMC1 != null) {
            stmt.bindString(17, JGMC1);
        }
 
        String JGMC2 = entity.getJGMC2();
        if (JGMC2 != null) {
            stmt.bindString(18, JGMC2);
        }
 
        String JGMC3 = entity.getJGMC3();
        if (JGMC3 != null) {
            stmt.bindString(19, JGMC3);
        }
 
        String SFTCYX = entity.getSFTCYX();
        if (SFTCYX != null) {
            stmt.bindString(20, SFTCYX);
        }
 
        String BZ = entity.getBZ();
        if (BZ != null) {
            stmt.bindString(21, BZ);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(22, sh);
        }
 
        String shr2 = entity.getShr2();
        if (shr2 != null) {
            stmt.bindString(23, shr2);
        }
 
        String shyy = entity.getShyy();
        if (shyy != null) {
            stmt.bindString(24, shyy);
        }
 
        String GLDW = entity.getGLDW();
        if (GLDW != null) {
            stmt.bindString(25, GLDW);
        }
 
        String GLDW2 = entity.getGLDW2();
        if (GLDW2 != null) {
            stmt.bindString(26, GLDW2);
        }
 
        String GLDW3 = entity.getGLDW3();
        if (GLDW3 != null) {
            stmt.bindString(27, GLDW3);
        }
 
        String KDQLLX = entity.getKDQLLX();
        if (KDQLLX != null) {
            stmt.bindString(28, KDQLLX);
        }
 
        String DTXL = entity.getDTXL();
        if (DTXL != null) {
            stmt.bindString(29, DTXL);
        }
 
        String ZDX = entity.getZDX();
        if (ZDX != null) {
            stmt.bindString(30, ZDX);
        }
        stmt.bindLong(31, entity.getWDID());
 
        String DDDW = entity.getDDDW();
        if (DDDW != null) {
            stmt.bindString(32, DDDW);
        }
 
        String czr = entity.getCzr();
        if (czr != null) {
            stmt.bindString(33, czr);
        }
 
        String tjr = entity.getTjr();
        if (tjr != null) {
            stmt.bindString(34, tjr);
        }
 
        String dwtjr = entity.getDwtjr();
        if (dwtjr != null) {
            stmt.bindString(35, dwtjr);
        }
 
        java.util.Date CZSJ = entity.getCZSJ();
        if (CZSJ != null) {
            stmt.bindLong(36, CZSJ.getTime());
        }
 
        String SFBDSJ = entity.getSFBDSJ();
        if (SFBDSJ != null) {
            stmt.bindString(37, SFBDSJ);
        }
 
        String SB = entity.getSB();
        if (SB != null) {
            stmt.bindString(38, SB);
        }
 
        java.util.Date SBSJ = entity.getSBSJ();
        if (SBSJ != null) {
            stmt.bindLong(39, SBSJ.getTime());
        }
 
        String SB_LS_ID = entity.getSB_LS_ID();
        if (SB_LS_ID != null) {
            stmt.bindString(40, SB_LS_ID);
        }
 
        String SBDW = entity.getSBDW();
        if (SBDW != null) {
            stmt.bindString(41, SBDW);
        }
 
        java.util.Date HZSJ = entity.getHZSJ();
        if (HZSJ != null) {
            stmt.bindLong(42, HZSJ.getTime());
        }
 
        String SBCZLX = entity.getSBCZLX();
        if (SBCZLX != null) {
            stmt.bindString(43, SBCZLX);
        }
 
        String SFXTLR = entity.getSFXTLR();
        if (SFXTLR != null) {
            stmt.bindString(44, SFXTLR);
        }
 
        String WJ_DW = entity.getWJ_DW();
        if (WJ_DW != null) {
            stmt.bindString(45, WJ_DW);
        }
 
        String WJ_LS_ID = entity.getWJ_LS_ID();
        if (WJ_LS_ID != null) {
            stmt.bindString(46, WJ_LS_ID);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, XLCS entity) {
        stmt.clearBindings();
 
        Long xlbh = entity.getXlbh();
        if (xlbh != null) {
            stmt.bindLong(1, xlbh);
        }
        stmt.bindLong(2, entity.getId());
 
        String BH = entity.getBH();
        if (BH != null) {
            stmt.bindString(3, BH);
        }
        stmt.bindLong(4, entity.getVf());
 
        String XLMC = entity.getXLMC();
        if (XLMC != null) {
            stmt.bindString(5, XLMC);
        }
        stmt.bindDouble(6, entity.getXLCD());
        stmt.bindLong(7, entity.getDYDJ());
 
        String KGBH1 = entity.getKGBH1();
        if (KGBH1 != null) {
            stmt.bindString(8, KGBH1);
        }
 
        String KGBH2 = entity.getKGBH2();
        if (KGBH2 != null) {
            stmt.bindString(9, KGBH2);
        }
 
        String KGBH3 = entity.getKGBH3();
        if (KGBH3 != null) {
            stmt.bindString(10, KGBH3);
        }
 
        String CZ1 = entity.getCZ1();
        if (CZ1 != null) {
            stmt.bindString(11, CZ1);
        }
 
        String CZ2 = entity.getCZ2();
        if (CZ2 != null) {
            stmt.bindString(12, CZ2);
        }
 
        String CZ3 = entity.getCZ3();
        if (CZ3 != null) {
            stmt.bindString(13, CZ3);
        }
 
        String JGLX1 = entity.getJGLX1();
        if (JGLX1 != null) {
            stmt.bindString(14, JGLX1);
        }
 
        String JGLX2 = entity.getJGLX2();
        if (JGLX2 != null) {
            stmt.bindString(15, JGLX2);
        }
 
        String JGLX3 = entity.getJGLX3();
        if (JGLX3 != null) {
            stmt.bindString(16, JGLX3);
        }
 
        String JGMC1 = entity.getJGMC1();
        if (JGMC1 != null) {
            stmt.bindString(17, JGMC1);
        }
 
        String JGMC2 = entity.getJGMC2();
        if (JGMC2 != null) {
            stmt.bindString(18, JGMC2);
        }
 
        String JGMC3 = entity.getJGMC3();
        if (JGMC3 != null) {
            stmt.bindString(19, JGMC3);
        }
 
        String SFTCYX = entity.getSFTCYX();
        if (SFTCYX != null) {
            stmt.bindString(20, SFTCYX);
        }
 
        String BZ = entity.getBZ();
        if (BZ != null) {
            stmt.bindString(21, BZ);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(22, sh);
        }
 
        String shr2 = entity.getShr2();
        if (shr2 != null) {
            stmt.bindString(23, shr2);
        }
 
        String shyy = entity.getShyy();
        if (shyy != null) {
            stmt.bindString(24, shyy);
        }
 
        String GLDW = entity.getGLDW();
        if (GLDW != null) {
            stmt.bindString(25, GLDW);
        }
 
        String GLDW2 = entity.getGLDW2();
        if (GLDW2 != null) {
            stmt.bindString(26, GLDW2);
        }
 
        String GLDW3 = entity.getGLDW3();
        if (GLDW3 != null) {
            stmt.bindString(27, GLDW3);
        }
 
        String KDQLLX = entity.getKDQLLX();
        if (KDQLLX != null) {
            stmt.bindString(28, KDQLLX);
        }
 
        String DTXL = entity.getDTXL();
        if (DTXL != null) {
            stmt.bindString(29, DTXL);
        }
 
        String ZDX = entity.getZDX();
        if (ZDX != null) {
            stmt.bindString(30, ZDX);
        }
        stmt.bindLong(31, entity.getWDID());
 
        String DDDW = entity.getDDDW();
        if (DDDW != null) {
            stmt.bindString(32, DDDW);
        }
 
        String czr = entity.getCzr();
        if (czr != null) {
            stmt.bindString(33, czr);
        }
 
        String tjr = entity.getTjr();
        if (tjr != null) {
            stmt.bindString(34, tjr);
        }
 
        String dwtjr = entity.getDwtjr();
        if (dwtjr != null) {
            stmt.bindString(35, dwtjr);
        }
 
        java.util.Date CZSJ = entity.getCZSJ();
        if (CZSJ != null) {
            stmt.bindLong(36, CZSJ.getTime());
        }
 
        String SFBDSJ = entity.getSFBDSJ();
        if (SFBDSJ != null) {
            stmt.bindString(37, SFBDSJ);
        }
 
        String SB = entity.getSB();
        if (SB != null) {
            stmt.bindString(38, SB);
        }
 
        java.util.Date SBSJ = entity.getSBSJ();
        if (SBSJ != null) {
            stmt.bindLong(39, SBSJ.getTime());
        }
 
        String SB_LS_ID = entity.getSB_LS_ID();
        if (SB_LS_ID != null) {
            stmt.bindString(40, SB_LS_ID);
        }
 
        String SBDW = entity.getSBDW();
        if (SBDW != null) {
            stmt.bindString(41, SBDW);
        }
 
        java.util.Date HZSJ = entity.getHZSJ();
        if (HZSJ != null) {
            stmt.bindLong(42, HZSJ.getTime());
        }
 
        String SBCZLX = entity.getSBCZLX();
        if (SBCZLX != null) {
            stmt.bindString(43, SBCZLX);
        }
 
        String SFXTLR = entity.getSFXTLR();
        if (SFXTLR != null) {
            stmt.bindString(44, SFXTLR);
        }
 
        String WJ_DW = entity.getWJ_DW();
        if (WJ_DW != null) {
            stmt.bindString(45, WJ_DW);
        }
 
        String WJ_LS_ID = entity.getWJ_LS_ID();
        if (WJ_LS_ID != null) {
            stmt.bindString(46, WJ_LS_ID);
        }
    }

    @Override
    public Integer readKey(Cursor cursor, int offset) {
        return cursor.getInt(offset + 1);
    }    

    @Override
    public XLCS readEntity(Cursor cursor, int offset) {
        XLCS entity = new XLCS( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // xlbh
            cursor.getInt(offset + 1), // id
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // BH
            cursor.getInt(offset + 3), // vf
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // XLMC
            cursor.getDouble(offset + 5), // XLCD
            cursor.getInt(offset + 6), // DYDJ
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // KGBH1
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // KGBH2
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // KGBH3
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // CZ1
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // CZ2
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // CZ3
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // JGLX1
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // JGLX2
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // JGLX3
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // JGMC1
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // JGMC2
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // JGMC3
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // SFTCYX
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // BZ
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // sh
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // shr2
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // shyy
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // GLDW
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // GLDW2
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // GLDW3
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // KDQLLX
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // DTXL
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // ZDX
            cursor.getInt(offset + 30), // WDID
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // DDDW
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // czr
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // tjr
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // dwtjr
            cursor.isNull(offset + 35) ? null : new java.util.Date(cursor.getLong(offset + 35)), // CZSJ
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // SFBDSJ
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // SB
            cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)), // SBSJ
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // SB_LS_ID
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // SBDW
            cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)), // HZSJ
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // SBCZLX
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // SFXTLR
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // WJ_DW
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45) // WJ_LS_ID
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, XLCS entity, int offset) {
        entity.setXlbh(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setId(cursor.getInt(offset + 1));
        entity.setBH(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setVf(cursor.getInt(offset + 3));
        entity.setXLMC(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setXLCD(cursor.getDouble(offset + 5));
        entity.setDYDJ(cursor.getInt(offset + 6));
        entity.setKGBH1(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setKGBH2(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setKGBH3(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCZ1(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCZ2(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCZ3(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setJGLX1(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setJGLX2(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setJGLX3(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setJGMC1(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setJGMC2(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setJGMC3(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setSFTCYX(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setBZ(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSh(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setShr2(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setShyy(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setGLDW(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setGLDW2(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setGLDW3(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setKDQLLX(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDTXL(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setZDX(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setWDID(cursor.getInt(offset + 30));
        entity.setDDDW(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setCzr(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setTjr(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setDwtjr(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCZSJ(cursor.isNull(offset + 35) ? null : new java.util.Date(cursor.getLong(offset + 35)));
        entity.setSFBDSJ(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setSB(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setSBSJ(cursor.isNull(offset + 38) ? null : new java.util.Date(cursor.getLong(offset + 38)));
        entity.setSB_LS_ID(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setSBDW(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setHZSJ(cursor.isNull(offset + 41) ? null : new java.util.Date(cursor.getLong(offset + 41)));
        entity.setSBCZLX(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setSFXTLR(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setWJ_DW(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setWJ_LS_ID(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
     }
    
    @Override
    protected final Integer updateKeyAfterInsert(XLCS entity, long rowId) {
        return entity.getId();
    }
    
    @Override
    public Integer getKey(XLCS entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(XLCS entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
