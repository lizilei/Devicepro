package cn.com.sgcc.dev.dao2;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.com.sgcc.dev.model2.BKXX;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "BKXX".
*/
public class BKXXDao extends AbstractDao<BKXX, Long> {

    public static final String TABLENAME = "BKXX";

    /**
     * Properties of entity BKXX.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "ID");
        public final static Property Zzcj = new Property(1, String.class, "zzcj", false, "ZZCJ");
        public final static Property Bkxh = new Property(2, String.class, "bkxh", false, "BKXH");
        public final static Property Bklb = new Property(3, String.class, "bklb", false, "BKLB");
        public final static Property Rjbb = new Property(4, String.class, "rjbb", false, "RJBB");
        public final static Property Bkbh = new Property(5, String.class, "bkbh", false, "BKBH");
        public final static Property Bkscrq = new Property(6, String.class, "bkscrq", false, "BKSCRQ");
        public final static Property Bkbgyy = new Property(7, String.class, "bkbgyy", false, "BKBGYY");
        public final static Property Bgsj = new Property(8, String.class, "bgsj", false, "BGSJ");
        public final static Property Zsjid = new Property(9, long.class, "zsjid", false, "ZSJID");
        public final static Property Zsjtype = new Property(10, String.class, "zsjtype", false, "ZSJTYPE");
        public final static Property Lsbkbh = new Property(11, String.class, "lsbkbh", false, "LSBKBH");
        public final static Property Lsbkbhstr = new Property(12, String.class, "lsbkbhstr", false, "LS_ZSJ_ID");
        public final static Property Sb_ls_id = new Property(13, String.class, "sb_ls_id", false, "SB_LS_ID");
        public final static Property Sb = new Property(14, String.class, "sb", false, "SB");
        public final static Property Sbsj = new Property(15, String.class, "sbsj", false, "SBSJ");
        public final static Property Hzsj = new Property(16, String.class, "hzsj", false, "HZSJ");
        public final static Property Sbdw = new Property(17, String.class, "sbdw", false, "SBDW");
        public final static Property Sbczlx = new Property(18, String.class, "sbczlx", false, "SBCZLX");
        public final static Property Wj_dw = new Property(19, String.class, "wj_dw", false, "WJ_DW");
        public final static Property Wj_ls_id = new Property(20, String.class, "wj_ls_id", false, "WJ_LS_ID");
        public final static Property Sfxtlr = new Property(21, String.class, "sfxtlr", false, "SFXTLR");
    }


    public BKXXDao(DaoConfig config) {
        super(config);
    }
    
    public BKXXDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, BKXX entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String zzcj = entity.getZzcj();
        if (zzcj != null) {
            stmt.bindString(2, zzcj);
        }
 
        String bkxh = entity.getBkxh();
        if (bkxh != null) {
            stmt.bindString(3, bkxh);
        }
 
        String bklb = entity.getBklb();
        if (bklb != null) {
            stmt.bindString(4, bklb);
        }
 
        String rjbb = entity.getRjbb();
        if (rjbb != null) {
            stmt.bindString(5, rjbb);
        }
 
        String bkbh = entity.getBkbh();
        if (bkbh != null) {
            stmt.bindString(6, bkbh);
        }
 
        String bkscrq = entity.getBkscrq();
        if (bkscrq != null) {
            stmt.bindString(7, bkscrq);
        }
 
        String bkbgyy = entity.getBkbgyy();
        if (bkbgyy != null) {
            stmt.bindString(8, bkbgyy);
        }
 
        String bgsj = entity.getBgsj();
        if (bgsj != null) {
            stmt.bindString(9, bgsj);
        }
        stmt.bindLong(10, entity.getZsjid());
 
        String zsjtype = entity.getZsjtype();
        if (zsjtype != null) {
            stmt.bindString(11, zsjtype);
        }
 
        String lsbkbh = entity.getLsbkbh();
        if (lsbkbh != null) {
            stmt.bindString(12, lsbkbh);
        }
 
        String lsbkbhstr = entity.getLsbkbhstr();
        if (lsbkbhstr != null) {
            stmt.bindString(13, lsbkbhstr);
        }
 
        String sb_ls_id = entity.getSb_ls_id();
        if (sb_ls_id != null) {
            stmt.bindString(14, sb_ls_id);
        }
 
        String sb = entity.getSb();
        if (sb != null) {
            stmt.bindString(15, sb);
        }
 
        String sbsj = entity.getSbsj();
        if (sbsj != null) {
            stmt.bindString(16, sbsj);
        }
 
        String hzsj = entity.getHzsj();
        if (hzsj != null) {
            stmt.bindString(17, hzsj);
        }
 
        String sbdw = entity.getSbdw();
        if (sbdw != null) {
            stmt.bindString(18, sbdw);
        }
 
        String sbczlx = entity.getSbczlx();
        if (sbczlx != null) {
            stmt.bindString(19, sbczlx);
        }
 
        String wj_dw = entity.getWj_dw();
        if (wj_dw != null) {
            stmt.bindString(20, wj_dw);
        }
 
        String wj_ls_id = entity.getWj_ls_id();
        if (wj_ls_id != null) {
            stmt.bindString(21, wj_ls_id);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(22, sfxtlr);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, BKXX entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String zzcj = entity.getZzcj();
        if (zzcj != null) {
            stmt.bindString(2, zzcj);
        }
 
        String bkxh = entity.getBkxh();
        if (bkxh != null) {
            stmt.bindString(3, bkxh);
        }
 
        String bklb = entity.getBklb();
        if (bklb != null) {
            stmt.bindString(4, bklb);
        }
 
        String rjbb = entity.getRjbb();
        if (rjbb != null) {
            stmt.bindString(5, rjbb);
        }
 
        String bkbh = entity.getBkbh();
        if (bkbh != null) {
            stmt.bindString(6, bkbh);
        }
 
        String bkscrq = entity.getBkscrq();
        if (bkscrq != null) {
            stmt.bindString(7, bkscrq);
        }
 
        String bkbgyy = entity.getBkbgyy();
        if (bkbgyy != null) {
            stmt.bindString(8, bkbgyy);
        }
 
        String bgsj = entity.getBgsj();
        if (bgsj != null) {
            stmt.bindString(9, bgsj);
        }
        stmt.bindLong(10, entity.getZsjid());
 
        String zsjtype = entity.getZsjtype();
        if (zsjtype != null) {
            stmt.bindString(11, zsjtype);
        }
 
        String lsbkbh = entity.getLsbkbh();
        if (lsbkbh != null) {
            stmt.bindString(12, lsbkbh);
        }
 
        String lsbkbhstr = entity.getLsbkbhstr();
        if (lsbkbhstr != null) {
            stmt.bindString(13, lsbkbhstr);
        }
 
        String sb_ls_id = entity.getSb_ls_id();
        if (sb_ls_id != null) {
            stmt.bindString(14, sb_ls_id);
        }
 
        String sb = entity.getSb();
        if (sb != null) {
            stmt.bindString(15, sb);
        }
 
        String sbsj = entity.getSbsj();
        if (sbsj != null) {
            stmt.bindString(16, sbsj);
        }
 
        String hzsj = entity.getHzsj();
        if (hzsj != null) {
            stmt.bindString(17, hzsj);
        }
 
        String sbdw = entity.getSbdw();
        if (sbdw != null) {
            stmt.bindString(18, sbdw);
        }
 
        String sbczlx = entity.getSbczlx();
        if (sbczlx != null) {
            stmt.bindString(19, sbczlx);
        }
 
        String wj_dw = entity.getWj_dw();
        if (wj_dw != null) {
            stmt.bindString(20, wj_dw);
        }
 
        String wj_ls_id = entity.getWj_ls_id();
        if (wj_ls_id != null) {
            stmt.bindString(21, wj_ls_id);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(22, sfxtlr);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public BKXX readEntity(Cursor cursor, int offset) {
        BKXX entity = new BKXX( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // zzcj
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // bkxh
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // bklb
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // rjbb
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // bkbh
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // bkscrq
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // bkbgyy
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // bgsj
            cursor.getLong(offset + 9), // zsjid
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // zsjtype
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // lsbkbh
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // lsbkbhstr
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // sb_ls_id
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // sb
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // sbsj
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // hzsj
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // sbdw
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // sbczlx
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // wj_dw
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // wj_ls_id
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21) // sfxtlr
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, BKXX entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setZzcj(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBkxh(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setBklb(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setRjbb(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setBkbh(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBkscrq(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setBkbgyy(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setBgsj(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setZsjid(cursor.getLong(offset + 9));
        entity.setZsjtype(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setLsbkbh(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setLsbkbhstr(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSb_ls_id(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSb(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setSbsj(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setHzsj(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setSbdw(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setSbczlx(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setWj_dw(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setWj_ls_id(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setSfxtlr(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(BKXX entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(BKXX entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(BKXX entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
