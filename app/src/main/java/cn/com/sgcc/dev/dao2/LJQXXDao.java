package cn.com.sgcc.dev.dao2;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.com.sgcc.dev.model2.LJQXX;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LJQXX".
*/
public class LJQXXDao extends AbstractDao<LJQXX, Long> {

    public static final String TABLENAME = "LJQXX";

    /**
     * Properties of entity LJQXX.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, long.class, "id", true, "ID");
        public final static Property Bhpzid = new Property(1, long.class, "bhpzid", false, "BHPZID");
        public final static Property Ctzjbh = new Property(2, String.class, "ctzjbh", false, "CTZJBH");
        public final static Property Ctzjzzcj = new Property(3, String.class, "ctzjzzcj", false, "CTZJZZCJ");
        public final static Property Ctzjxh = new Property(4, String.class, "ctzjxh", false, "CTZJXH");
        public final static Property Jklx = new Property(5, String.class, "jklx", false, "JKLX");
        public final static Property Jkyt = new Property(6, String.class, "jkyt", false, "JKYT");
        public final static Property Jtzjqfrq = new Property(7, String.class, "jtzjqfrq", false, "JTZJQFRQ");
        public final static Property Ghsj = new Property(8, String.class, "ghsj", false, "GHSJ");
        public final static Property Ghyy = new Property(9, String.class, "ghyy", false, "GHYY");
        public final static Property Lsctid = new Property(10, long.class, "lsctid", false, "LSCTID");
        public final static Property Sjbs = new Property(11, String.class, "sjbs", false, "SJBS");
        public final static Property Sh = new Property(12, String.class, "sh", false, "SH");
        public final static Property Sbdw = new Property(13, String.class, "sbdw", false, "SBDW");
        public final static Property Sb = new Property(14, String.class, "sb", false, "SB");
        public final static Property Sb_ls_id = new Property(15, String.class, "sb_ls_id", false, "SB_LS_ID");
        public final static Property Sfxtlr = new Property(16, String.class, "sfxtlr", false, "SFXTLR");
        public final static Property Ewmxx = new Property(17, String.class, "ewmxx", false, "EWMXX");
        public final static Property ED_TAG = new Property(18, String.class, "ED_TAG", false, "ED_TAG");
        public final static Property Dzpxx = new Property(19, String.class, "dzpxx", false, "DZPXX");
    }


    public LJQXXDao(DaoConfig config) {
        super(config);
    }
    
    public LJQXXDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, LJQXX entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
        stmt.bindLong(2, entity.getBhpzid());
 
        String ctzjbh = entity.getCtzjbh();
        if (ctzjbh != null) {
            stmt.bindString(3, ctzjbh);
        }
 
        String ctzjzzcj = entity.getCtzjzzcj();
        if (ctzjzzcj != null) {
            stmt.bindString(4, ctzjzzcj);
        }
 
        String ctzjxh = entity.getCtzjxh();
        if (ctzjxh != null) {
            stmt.bindString(5, ctzjxh);
        }
 
        String jklx = entity.getJklx();
        if (jklx != null) {
            stmt.bindString(6, jklx);
        }
 
        String jkyt = entity.getJkyt();
        if (jkyt != null) {
            stmt.bindString(7, jkyt);
        }
 
        String jtzjqfrq = entity.getJtzjqfrq();
        if (jtzjqfrq != null) {
            stmt.bindString(8, jtzjqfrq);
        }
 
        String ghsj = entity.getGhsj();
        if (ghsj != null) {
            stmt.bindString(9, ghsj);
        }
 
        String ghyy = entity.getGhyy();
        if (ghyy != null) {
            stmt.bindString(10, ghyy);
        }
        stmt.bindLong(11, entity.getLsctid());
 
        String sjbs = entity.getSjbs();
        if (sjbs != null) {
            stmt.bindString(12, sjbs);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(13, sh);
        }
 
        String sbdw = entity.getSbdw();
        if (sbdw != null) {
            stmt.bindString(14, sbdw);
        }
 
        String sb = entity.getSb();
        if (sb != null) {
            stmt.bindString(15, sb);
        }
 
        String sb_ls_id = entity.getSb_ls_id();
        if (sb_ls_id != null) {
            stmt.bindString(16, sb_ls_id);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(17, sfxtlr);
        }
 
        String ewmxx = entity.getEwmxx();
        if (ewmxx != null) {
            stmt.bindString(18, ewmxx);
        }
 
        String ED_TAG = entity.getED_TAG();
        if (ED_TAG != null) {
            stmt.bindString(19, ED_TAG);
        }
 
        String dzpxx = entity.getDzpxx();
        if (dzpxx != null) {
            stmt.bindString(20, dzpxx);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, LJQXX entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getId());
        stmt.bindLong(2, entity.getBhpzid());
 
        String ctzjbh = entity.getCtzjbh();
        if (ctzjbh != null) {
            stmt.bindString(3, ctzjbh);
        }
 
        String ctzjzzcj = entity.getCtzjzzcj();
        if (ctzjzzcj != null) {
            stmt.bindString(4, ctzjzzcj);
        }
 
        String ctzjxh = entity.getCtzjxh();
        if (ctzjxh != null) {
            stmt.bindString(5, ctzjxh);
        }
 
        String jklx = entity.getJklx();
        if (jklx != null) {
            stmt.bindString(6, jklx);
        }
 
        String jkyt = entity.getJkyt();
        if (jkyt != null) {
            stmt.bindString(7, jkyt);
        }
 
        String jtzjqfrq = entity.getJtzjqfrq();
        if (jtzjqfrq != null) {
            stmt.bindString(8, jtzjqfrq);
        }
 
        String ghsj = entity.getGhsj();
        if (ghsj != null) {
            stmt.bindString(9, ghsj);
        }
 
        String ghyy = entity.getGhyy();
        if (ghyy != null) {
            stmt.bindString(10, ghyy);
        }
        stmt.bindLong(11, entity.getLsctid());
 
        String sjbs = entity.getSjbs();
        if (sjbs != null) {
            stmt.bindString(12, sjbs);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(13, sh);
        }
 
        String sbdw = entity.getSbdw();
        if (sbdw != null) {
            stmt.bindString(14, sbdw);
        }
 
        String sb = entity.getSb();
        if (sb != null) {
            stmt.bindString(15, sb);
        }
 
        String sb_ls_id = entity.getSb_ls_id();
        if (sb_ls_id != null) {
            stmt.bindString(16, sb_ls_id);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(17, sfxtlr);
        }
 
        String ewmxx = entity.getEwmxx();
        if (ewmxx != null) {
            stmt.bindString(18, ewmxx);
        }
 
        String ED_TAG = entity.getED_TAG();
        if (ED_TAG != null) {
            stmt.bindString(19, ED_TAG);
        }
 
        String dzpxx = entity.getDzpxx();
        if (dzpxx != null) {
            stmt.bindString(20, dzpxx);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    @Override
    public LJQXX readEntity(Cursor cursor, int offset) {
        LJQXX entity = new LJQXX( //
            cursor.getLong(offset + 0), // id
            cursor.getLong(offset + 1), // bhpzid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ctzjbh
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // ctzjzzcj
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ctzjxh
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // jklx
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // jkyt
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // jtzjqfrq
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // ghsj
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // ghyy
            cursor.getLong(offset + 10), // lsctid
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // sjbs
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // sh
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // sbdw
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // sb
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // sb_ls_id
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // sfxtlr
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // ewmxx
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // ED_TAG
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19) // dzpxx
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, LJQXX entity, int offset) {
        entity.setId(cursor.getLong(offset + 0));
        entity.setBhpzid(cursor.getLong(offset + 1));
        entity.setCtzjbh(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCtzjzzcj(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setCtzjxh(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setJklx(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setJkyt(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setJtzjqfrq(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setGhsj(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setGhyy(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setLsctid(cursor.getLong(offset + 10));
        entity.setSjbs(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setSh(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setSbdw(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSb(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setSb_ls_id(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setSfxtlr(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setEwmxx(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setED_TAG(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setDzpxx(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(LJQXX entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(LJQXX entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(LJQXX entity) {
        throw new UnsupportedOperationException("Unsupported for entities with a non-null key");
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
