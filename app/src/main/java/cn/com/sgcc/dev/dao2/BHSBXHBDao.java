package cn.com.sgcc.dev.dao2;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.com.sgcc.dev.model2.BHSBXHB;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "BHSBXHB".
*/
public class BHSBXHBDao extends AbstractDao<BHSBXHB, Long> {

    public static final String TABLENAME = "BHSBXHB";

    /**
     * Properties of entity BHSBXHB.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "ID");
        public final static Property Sbxh = new Property(1, String.class, "sbxh", false, "SBXH");
        public final static Property Zzcj = new Property(2, String.class, "zzcj", false, "ZZCJ");
        public final static Property Bbjym = new Property(3, String.class, "bbjym", false, "BBJYM");
        public final static Property Bhlb = new Property(4, String.class, "bhlb", false, "BHLB");
        public final static Property Bhlx = new Property(5, String.class, "bhlx", false, "BHLX");
        public final static Property Bhfl = new Property(6, String.class, "bhfl", false, "BHFL");
        public final static Property Bhgn = new Property(7, String.class, "bhgn", false, "BHGN");
        public final static Property Bj = new Property(8, String.class, "bj", false, "bj");
        public final static Property Wdid = new Property(9, long.class, "wdid", false, "WDID");
        public final static Property Tb = new Property(10, String.class, "tb", false, "TB");
        public final static Property Rjxd = new Property(11, String.class, "rjxd", false, "RJXD");
        public final static Property Sh = new Property(12, String.class, "sh", false, "SH");
        public final static Property Shr = new Property(13, String.class, "shr", false, "SHR");
        public final static Property Dwtjr = new Property(14, String.class, "dwtjr", false, "DWTJR");
        public final static Property Tjr = new Property(15, String.class, "tjr", false, "TJR");
        public final static Property Czr = new Property(16, String.class, "czr", false, "CZR");
        public final static Property Shyy = new Property(17, String.class, "shyy", false, "SHYY");
        public final static Property Yzrq = new Property(18, String.class, "yzrq", false, "YZRQ");
        public final static Property Bz = new Property(19, String.class, "bz", false, "BZ");
        public final static Property Sfqy = new Property(20, String.class, "sfqy", false, "SFQY");
        public final static Property Code = new Property(21, String.class, "code", false, "CODE");
        public final static Property Bblx = new Property(22, String.class, "bblx", false, "BBLX");
        public final static Property Bbxh = new Property(23, int.class, "bbxh", false, "BBXH");
        public final static Property Sfbdsj = new Property(24, String.class, "sfbdsj", false, "SFBDSJ");
        public final static Property Bhsbxhxx = new Property(25, String.class, "bhsbxhxx", false, "BHSBXHXX");
        public final static Property State = new Property(26, String.class, "state", false, "STATE");
        public final static Property Xhxx = new Property(27, String.class, "xhxx", false, "XHXX");
        public final static Property Cz = new Property(28, String.class, "cz", false, "CZ");
        public final static Property Fg = new Property(29, String.class, "fg", false, "FG");
        public final static Property Fname = new Property(30, String.class, "fname", false, "FNAME");
        public final static Property Ls_bhsbxhxx = new Property(31, String.class, "ls_bhsbxhxx", false, "LS_BHSBXHXX");
        public final static Property Ls_code = new Property(32, String.class, "ls_code", false, "LS_CODE");
        public final static Property T_xx = new Property(33, String.class, "t_xx", false, "T_XX");
        public final static Property Sfxtlr = new Property(34, String.class, "sfxtlr", false, "SFXTLR");
        public final static Property ED_TAG = new Property(35, String.class, "ED_TAG", false, "ED_TAG");
    }


    public BHSBXHBDao(DaoConfig config) {
        super(config);
    }
    
    public BHSBXHBDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, BHSBXHB entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String sbxh = entity.getSbxh();
        if (sbxh != null) {
            stmt.bindString(2, sbxh);
        }
 
        String zzcj = entity.getZzcj();
        if (zzcj != null) {
            stmt.bindString(3, zzcj);
        }
 
        String bbjym = entity.getBbjym();
        if (bbjym != null) {
            stmt.bindString(4, bbjym);
        }
 
        String bhlb = entity.getBhlb();
        if (bhlb != null) {
            stmt.bindString(5, bhlb);
        }
 
        String bhlx = entity.getBhlx();
        if (bhlx != null) {
            stmt.bindString(6, bhlx);
        }
 
        String bhfl = entity.getBhfl();
        if (bhfl != null) {
            stmt.bindString(7, bhfl);
        }
 
        String bhgn = entity.getBhgn();
        if (bhgn != null) {
            stmt.bindString(8, bhgn);
        }
 
        String bj = entity.getBj();
        if (bj != null) {
            stmt.bindString(9, bj);
        }
        stmt.bindLong(10, entity.getWdid());
 
        String tb = entity.getTb();
        if (tb != null) {
            stmt.bindString(11, tb);
        }
 
        String rjxd = entity.getRjxd();
        if (rjxd != null) {
            stmt.bindString(12, rjxd);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(13, sh);
        }
 
        String shr = entity.getShr();
        if (shr != null) {
            stmt.bindString(14, shr);
        }
 
        String dwtjr = entity.getDwtjr();
        if (dwtjr != null) {
            stmt.bindString(15, dwtjr);
        }
 
        String tjr = entity.getTjr();
        if (tjr != null) {
            stmt.bindString(16, tjr);
        }
 
        String czr = entity.getCzr();
        if (czr != null) {
            stmt.bindString(17, czr);
        }
 
        String shyy = entity.getShyy();
        if (shyy != null) {
            stmt.bindString(18, shyy);
        }
 
        String yzrq = entity.getYzrq();
        if (yzrq != null) {
            stmt.bindString(19, yzrq);
        }
 
        String bz = entity.getBz();
        if (bz != null) {
            stmt.bindString(20, bz);
        }
 
        String sfqy = entity.getSfqy();
        if (sfqy != null) {
            stmt.bindString(21, sfqy);
        }
 
        String code = entity.getCode();
        if (code != null) {
            stmt.bindString(22, code);
        }
 
        String bblx = entity.getBblx();
        if (bblx != null) {
            stmt.bindString(23, bblx);
        }
        stmt.bindLong(24, entity.getBbxh());
 
        String sfbdsj = entity.getSfbdsj();
        if (sfbdsj != null) {
            stmt.bindString(25, sfbdsj);
        }
 
        String bhsbxhxx = entity.getBhsbxhxx();
        if (bhsbxhxx != null) {
            stmt.bindString(26, bhsbxhxx);
        }
 
        String state = entity.getState();
        if (state != null) {
            stmt.bindString(27, state);
        }
 
        String xhxx = entity.getXhxx();
        if (xhxx != null) {
            stmt.bindString(28, xhxx);
        }
 
        String cz = entity.getCz();
        if (cz != null) {
            stmt.bindString(29, cz);
        }
 
        String fg = entity.getFg();
        if (fg != null) {
            stmt.bindString(30, fg);
        }
 
        String fname = entity.getFname();
        if (fname != null) {
            stmt.bindString(31, fname);
        }
 
        String ls_bhsbxhxx = entity.getLs_bhsbxhxx();
        if (ls_bhsbxhxx != null) {
            stmt.bindString(32, ls_bhsbxhxx);
        }
 
        String ls_code = entity.getLs_code();
        if (ls_code != null) {
            stmt.bindString(33, ls_code);
        }
 
        String t_xx = entity.getT_xx();
        if (t_xx != null) {
            stmt.bindString(34, t_xx);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(35, sfxtlr);
        }
 
        String ED_TAG = entity.getED_TAG();
        if (ED_TAG != null) {
            stmt.bindString(36, ED_TAG);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, BHSBXHB entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String sbxh = entity.getSbxh();
        if (sbxh != null) {
            stmt.bindString(2, sbxh);
        }
 
        String zzcj = entity.getZzcj();
        if (zzcj != null) {
            stmt.bindString(3, zzcj);
        }
 
        String bbjym = entity.getBbjym();
        if (bbjym != null) {
            stmt.bindString(4, bbjym);
        }
 
        String bhlb = entity.getBhlb();
        if (bhlb != null) {
            stmt.bindString(5, bhlb);
        }
 
        String bhlx = entity.getBhlx();
        if (bhlx != null) {
            stmt.bindString(6, bhlx);
        }
 
        String bhfl = entity.getBhfl();
        if (bhfl != null) {
            stmt.bindString(7, bhfl);
        }
 
        String bhgn = entity.getBhgn();
        if (bhgn != null) {
            stmt.bindString(8, bhgn);
        }
 
        String bj = entity.getBj();
        if (bj != null) {
            stmt.bindString(9, bj);
        }
        stmt.bindLong(10, entity.getWdid());
 
        String tb = entity.getTb();
        if (tb != null) {
            stmt.bindString(11, tb);
        }
 
        String rjxd = entity.getRjxd();
        if (rjxd != null) {
            stmt.bindString(12, rjxd);
        }
 
        String sh = entity.getSh();
        if (sh != null) {
            stmt.bindString(13, sh);
        }
 
        String shr = entity.getShr();
        if (shr != null) {
            stmt.bindString(14, shr);
        }
 
        String dwtjr = entity.getDwtjr();
        if (dwtjr != null) {
            stmt.bindString(15, dwtjr);
        }
 
        String tjr = entity.getTjr();
        if (tjr != null) {
            stmt.bindString(16, tjr);
        }
 
        String czr = entity.getCzr();
        if (czr != null) {
            stmt.bindString(17, czr);
        }
 
        String shyy = entity.getShyy();
        if (shyy != null) {
            stmt.bindString(18, shyy);
        }
 
        String yzrq = entity.getYzrq();
        if (yzrq != null) {
            stmt.bindString(19, yzrq);
        }
 
        String bz = entity.getBz();
        if (bz != null) {
            stmt.bindString(20, bz);
        }
 
        String sfqy = entity.getSfqy();
        if (sfqy != null) {
            stmt.bindString(21, sfqy);
        }
 
        String code = entity.getCode();
        if (code != null) {
            stmt.bindString(22, code);
        }
 
        String bblx = entity.getBblx();
        if (bblx != null) {
            stmt.bindString(23, bblx);
        }
        stmt.bindLong(24, entity.getBbxh());
 
        String sfbdsj = entity.getSfbdsj();
        if (sfbdsj != null) {
            stmt.bindString(25, sfbdsj);
        }
 
        String bhsbxhxx = entity.getBhsbxhxx();
        if (bhsbxhxx != null) {
            stmt.bindString(26, bhsbxhxx);
        }
 
        String state = entity.getState();
        if (state != null) {
            stmt.bindString(27, state);
        }
 
        String xhxx = entity.getXhxx();
        if (xhxx != null) {
            stmt.bindString(28, xhxx);
        }
 
        String cz = entity.getCz();
        if (cz != null) {
            stmt.bindString(29, cz);
        }
 
        String fg = entity.getFg();
        if (fg != null) {
            stmt.bindString(30, fg);
        }
 
        String fname = entity.getFname();
        if (fname != null) {
            stmt.bindString(31, fname);
        }
 
        String ls_bhsbxhxx = entity.getLs_bhsbxhxx();
        if (ls_bhsbxhxx != null) {
            stmt.bindString(32, ls_bhsbxhxx);
        }
 
        String ls_code = entity.getLs_code();
        if (ls_code != null) {
            stmt.bindString(33, ls_code);
        }
 
        String t_xx = entity.getT_xx();
        if (t_xx != null) {
            stmt.bindString(34, t_xx);
        }
 
        String sfxtlr = entity.getSfxtlr();
        if (sfxtlr != null) {
            stmt.bindString(35, sfxtlr);
        }
 
        String ED_TAG = entity.getED_TAG();
        if (ED_TAG != null) {
            stmt.bindString(36, ED_TAG);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public BHSBXHB readEntity(Cursor cursor, int offset) {
        BHSBXHB entity = new BHSBXHB( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // sbxh
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // zzcj
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // bbjym
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // bhlb
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // bhlx
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // bhfl
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // bhgn
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // bj
            cursor.getLong(offset + 9), // wdid
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // tb
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // rjxd
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // sh
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // shr
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // dwtjr
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // tjr
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // czr
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // shyy
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // yzrq
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // bz
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // sfqy
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // code
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // bblx
            cursor.getInt(offset + 23), // bbxh
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // sfbdsj
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // bhsbxhxx
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // state
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // xhxx
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // cz
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // fg
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // fname
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // ls_bhsbxhxx
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // ls_code
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // t_xx
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // sfxtlr
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35) // ED_TAG
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, BHSBXHB entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setSbxh(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setZzcj(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setBbjym(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setBhlb(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setBhlx(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBhfl(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setBhgn(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setBj(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setWdid(cursor.getLong(offset + 9));
        entity.setTb(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setRjxd(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setSh(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setShr(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDwtjr(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setTjr(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCzr(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setShyy(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setYzrq(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setBz(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setSfqy(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setCode(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBblx(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setBbxh(cursor.getInt(offset + 23));
        entity.setSfbdsj(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setBhsbxhxx(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setState(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setXhxx(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCz(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setFg(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setFname(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setLs_bhsbxhxx(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setLs_code(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setT_xx(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setSfxtlr(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setED_TAG(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(BHSBXHB entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(BHSBXHB entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(BHSBXHB entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
