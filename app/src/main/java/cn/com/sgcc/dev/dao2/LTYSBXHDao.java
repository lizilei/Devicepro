package cn.com.sgcc.dev.dao2;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import cn.com.sgcc.dev.model2.LTYSBXH;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LTYSBXH".
*/
public class LTYSBXHDao extends AbstractDao<LTYSBXH, Long> {

    public static final String TABLENAME = "LTYSBXH";

    /**
     * Properties of entity LTYSBXH.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "ID");
        public final static Property Zzcj = new Property(1, String.class, "zzcj", false, "ZZCJ");
        public final static Property Bhlb = new Property(2, String.class, "bhlb", false, "BHLB");
        public final static Property Bhxh = new Property(3, String.class, "bhxh", false, "BHXH");
        public final static Property Bhfl = new Property(4, String.class, "bhfl", false, "BHFL");
        public final static Property Bhlx = new Property(5, String.class, "bhlx", false, "BHLX");
        public final static Property Bblx = new Property(6, String.class, "bblx", false, "BBLX");
        public final static Property State = new Property(7, String.class, "state", false, "STATE");
        public final static Property Xp = new Property(8, String.class, "xp", false, "XP");
        public final static Property Rjbb = new Property(9, String.class, "rjbb", false, "RJBB");
        public final static Property Sydydj = new Property(10, String.class, "sydydj", false, "SYDYDJ");
        public final static Property Sfqy = new Property(11, String.class, "sfqy", false, "SFQY");
        public final static Property Code = new Property(12, String.class, "code", false, "CODE");
        public final static Property Wjbb = new Property(13, String.class, "wjbb", false, "WJBB");
        public final static Property Wjmc = new Property(14, String.class, "wjmc", false, "WJMC");
        public final static Property Wjdx = new Property(15, String.class, "wjdx", false, "WJDX");
        public final static Property Zzxgsj = new Property(16, String.class, "zzxgsj", false, "ZZXGSJ");
        public final static Property Crc32 = new Property(17, String.class, "crc32", false, "CRC32");
        public final static Property Md5 = new Property(18, String.class, "md5", false, "MD5");
        public final static Property Jymscsj = new Property(19, String.class, "jymscsj", false, "JYMSCSJ");
        public final static Property Xxscsj = new Property(20, String.class, "xxscsj", false, "XXSCSJ");
        public final static Property Zyjcpc = new Property(21, String.class, "zyjcpc", false, "ZYJCPC");
        public final static Property Sysblx = new Property(22, String.class, "sysblx", false, "SYSBLX");
        public final static Property ED_TAG = new Property(23, String.class, "ED_TAG", false, "ED_TAG");
    }


    public LTYSBXHDao(DaoConfig config) {
        super(config);
    }
    
    public LTYSBXHDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, LTYSBXH entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String zzcj = entity.getZzcj();
        if (zzcj != null) {
            stmt.bindString(2, zzcj);
        }
 
        String bhlb = entity.getBhlb();
        if (bhlb != null) {
            stmt.bindString(3, bhlb);
        }
 
        String bhxh = entity.getBhxh();
        if (bhxh != null) {
            stmt.bindString(4, bhxh);
        }
 
        String bhfl = entity.getBhfl();
        if (bhfl != null) {
            stmt.bindString(5, bhfl);
        }
 
        String bhlx = entity.getBhlx();
        if (bhlx != null) {
            stmt.bindString(6, bhlx);
        }
 
        String bblx = entity.getBblx();
        if (bblx != null) {
            stmt.bindString(7, bblx);
        }
 
        String state = entity.getState();
        if (state != null) {
            stmt.bindString(8, state);
        }
 
        String xp = entity.getXp();
        if (xp != null) {
            stmt.bindString(9, xp);
        }
 
        String rjbb = entity.getRjbb();
        if (rjbb != null) {
            stmt.bindString(10, rjbb);
        }
 
        String sydydj = entity.getSydydj();
        if (sydydj != null) {
            stmt.bindString(11, sydydj);
        }
 
        String sfqy = entity.getSfqy();
        if (sfqy != null) {
            stmt.bindString(12, sfqy);
        }
 
        String code = entity.getCode();
        if (code != null) {
            stmt.bindString(13, code);
        }
 
        String wjbb = entity.getWjbb();
        if (wjbb != null) {
            stmt.bindString(14, wjbb);
        }
 
        String wjmc = entity.getWjmc();
        if (wjmc != null) {
            stmt.bindString(15, wjmc);
        }
 
        String wjdx = entity.getWjdx();
        if (wjdx != null) {
            stmt.bindString(16, wjdx);
        }
 
        String zzxgsj = entity.getZzxgsj();
        if (zzxgsj != null) {
            stmt.bindString(17, zzxgsj);
        }
 
        String crc32 = entity.getCrc32();
        if (crc32 != null) {
            stmt.bindString(18, crc32);
        }
 
        String md5 = entity.getMd5();
        if (md5 != null) {
            stmt.bindString(19, md5);
        }
 
        String jymscsj = entity.getJymscsj();
        if (jymscsj != null) {
            stmt.bindString(20, jymscsj);
        }
 
        String xxscsj = entity.getXxscsj();
        if (xxscsj != null) {
            stmt.bindString(21, xxscsj);
        }
 
        String zyjcpc = entity.getZyjcpc();
        if (zyjcpc != null) {
            stmt.bindString(22, zyjcpc);
        }
 
        String sysblx = entity.getSysblx();
        if (sysblx != null) {
            stmt.bindString(23, sysblx);
        }
 
        String ED_TAG = entity.getED_TAG();
        if (ED_TAG != null) {
            stmt.bindString(24, ED_TAG);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, LTYSBXH entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String zzcj = entity.getZzcj();
        if (zzcj != null) {
            stmt.bindString(2, zzcj);
        }
 
        String bhlb = entity.getBhlb();
        if (bhlb != null) {
            stmt.bindString(3, bhlb);
        }
 
        String bhxh = entity.getBhxh();
        if (bhxh != null) {
            stmt.bindString(4, bhxh);
        }
 
        String bhfl = entity.getBhfl();
        if (bhfl != null) {
            stmt.bindString(5, bhfl);
        }
 
        String bhlx = entity.getBhlx();
        if (bhlx != null) {
            stmt.bindString(6, bhlx);
        }
 
        String bblx = entity.getBblx();
        if (bblx != null) {
            stmt.bindString(7, bblx);
        }
 
        String state = entity.getState();
        if (state != null) {
            stmt.bindString(8, state);
        }
 
        String xp = entity.getXp();
        if (xp != null) {
            stmt.bindString(9, xp);
        }
 
        String rjbb = entity.getRjbb();
        if (rjbb != null) {
            stmt.bindString(10, rjbb);
        }
 
        String sydydj = entity.getSydydj();
        if (sydydj != null) {
            stmt.bindString(11, sydydj);
        }
 
        String sfqy = entity.getSfqy();
        if (sfqy != null) {
            stmt.bindString(12, sfqy);
        }
 
        String code = entity.getCode();
        if (code != null) {
            stmt.bindString(13, code);
        }
 
        String wjbb = entity.getWjbb();
        if (wjbb != null) {
            stmt.bindString(14, wjbb);
        }
 
        String wjmc = entity.getWjmc();
        if (wjmc != null) {
            stmt.bindString(15, wjmc);
        }
 
        String wjdx = entity.getWjdx();
        if (wjdx != null) {
            stmt.bindString(16, wjdx);
        }
 
        String zzxgsj = entity.getZzxgsj();
        if (zzxgsj != null) {
            stmt.bindString(17, zzxgsj);
        }
 
        String crc32 = entity.getCrc32();
        if (crc32 != null) {
            stmt.bindString(18, crc32);
        }
 
        String md5 = entity.getMd5();
        if (md5 != null) {
            stmt.bindString(19, md5);
        }
 
        String jymscsj = entity.getJymscsj();
        if (jymscsj != null) {
            stmt.bindString(20, jymscsj);
        }
 
        String xxscsj = entity.getXxscsj();
        if (xxscsj != null) {
            stmt.bindString(21, xxscsj);
        }
 
        String zyjcpc = entity.getZyjcpc();
        if (zyjcpc != null) {
            stmt.bindString(22, zyjcpc);
        }
 
        String sysblx = entity.getSysblx();
        if (sysblx != null) {
            stmt.bindString(23, sysblx);
        }
 
        String ED_TAG = entity.getED_TAG();
        if (ED_TAG != null) {
            stmt.bindString(24, ED_TAG);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public LTYSBXH readEntity(Cursor cursor, int offset) {
        LTYSBXH entity = new LTYSBXH( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // zzcj
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // bhlb
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // bhxh
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // bhfl
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // bhlx
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // bblx
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // state
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // xp
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // rjbb
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // sydydj
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // sfqy
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // code
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // wjbb
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // wjmc
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // wjdx
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // zzxgsj
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // crc32
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // md5
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // jymscsj
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // xxscsj
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // zyjcpc
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // sysblx
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23) // ED_TAG
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, LTYSBXH entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setZzcj(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBhlb(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setBhxh(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setBhfl(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setBhlx(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setBblx(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setState(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setXp(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setRjbb(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setSydydj(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setSfqy(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCode(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setWjbb(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setWjmc(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setWjdx(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setZzxgsj(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setCrc32(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setMd5(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setJymscsj(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setXxscsj(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setZyjcpc(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setSysblx(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setED_TAG(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(LTYSBXH entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(LTYSBXH entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(LTYSBXH entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
